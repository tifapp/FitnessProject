name: Project Setup
run-name: Setup Project

env:
  TEST_RUNNER_CI: 1
  NODE_VERSION: "20.0.0"

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
      - development
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_native_changes:
    runs-on: ubuntu-latest
    outputs:
      native_changes: ${{ steps.check-files.outputs.native_changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check for native file changes
        id: check-files
        run: |
          git diff --name-only HEAD^ HEAD > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt
          
          if grep -q -E "android/|ios/|expo-plugins/|app.json|eas.json" changed_files.txt; then
            echo "native_changes=true" >> $GITHUB_OUTPUT
            echo "Native files were changed"
          else
            echo "native_changes=false" >> $GITHUB_OUTPUT
            echo "No native files were changed"
          fi

  setup_and_lint:
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Install Dependencies
        run: |
          if [ ! -d "node_modules" ]; then
            echo "Cache not found, running npm ci."
            npm ci
          else
            echo "Cache restored, skipping npm ci."
          fi
        env:
          TIFSHARED_JS: true

      - name: Lint
        run: npm run staged-lint

  unit_tests:
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    needs: setup_and_lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Add Env
        run: echo "API_URL=${{ secrets.API_ENDPOINT }}" >> .env

      - name: Run tests
        run: npm run test:ci

  build:
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD')
    needs: unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Bundle project
        run: npx expo export --platform ios --platform android

  wait-for-review:
    needs: [build, check_native_changes]
    runs-on: ubuntu-latest
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD') && needs.check_native_changes.outputs.native_changes == 'true'
    environment:
      name: eas-build
      url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Waiting for review
        run: echo "Waiting for environment review"

  eas-build:
    needs: [wait-for-review, check_native_changes]
    if: github.actor != 'roswaaltifbot' && !startsWith(github.event.pull_request.title, 'IGNORE_BUILD') && needs.check_native_changes.outputs.native_changes == 'true'
    name: Perform EAS Build
    runs-on: ubuntu-latest
    env:
      EXPO_PROJECT_ID: ${{ secrets.EXPO_PROJECT_ID }}
      EXPO_PROJECT_OWNER: ${{ secrets.EXPO_PROJECT_OWNER }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.0.0"

      - name: Install Dependencies
        run: |
          if [ ! -d "node_modules" ]; then
            echo "Cache not found, running npm ci."
            npm ci
          else
            echo "Cache restored, skipping npm ci."
          fi

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_ACCESS_TOKEN }}

      - name: Construct .env
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> .env.infra
          echo "CHECK_RUN_ID=${{ github.run_id }}" >> .env.infra
          echo "GITHUB_SHA=${{ github.sha }}" >> .env.infra
          echo "GITHUB_REPOSITORY=${{ github.repository }}" >> .env.infra
          echo "RUN_EAS_BUILD_HOOKS=1" >> .env.infra
          echo "EXPO_PROJECT_ID=${{ secrets.EXPO_PROJECT_ID }}" >> .env.infra
          echo "EXPO_PROJECT_OWNER=${{ secrets.EXPO_PROJECT_OWNER }}" >> .env.infra
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
          echo "MIXPANEL_TOKEN=${{ secrets.MIXPANEL_TOKEN }}" >> .env
          echo "API_URL=${{ secrets.API_ENDPOINT }}" >> .env

      - name: Trigger Build on EAS
        run: eas build --profile development --platform all --non-interactive --no-wait
        env:
          EXPO_ACCESS_TOKEN: ${{ secrets.EXPO_ACCESS_TOKEN }}

  # New job to handle the build status
  build-status:
    needs: [check_native_changes, build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check if EAS build is required
        env:
          NATIVE_CHANGES: ${{ needs.check_native_changes.outputs.native_changes }}
        run: |
          if [ "$NATIVE_CHANGES" == "true" ]; then
            # If native changes were detected, this job should wait for eas-build
            if [ "${{ contains(needs.*.result, 'failure') }}" == "true" ]; then
              echo "Previous steps failed"
              exit 1
            fi
            echo "Native changes detected - EAS build required and must complete"
            if [ "${{ needs.eas-build.result }}" != "success" ]; then
              echo "EAS build failed or not completed"
              exit 1
            fi
          else
            # If no native changes, we only care about the regular build status
            if [ "${{ needs.build.result }}" != "success" ]; then
              echo "Build failed"
              exit 1
            fi
            echo "No native changes - skipping EAS build requirement"
          fi